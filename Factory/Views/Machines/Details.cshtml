@{
  Layout = "_Layout";
}

@using Factory.Models
@model Factory.Models.Machine

<h1>Machine Details</h1>

<p>@Html.DisplayNameFor(model => model.Manufacturer) : @Html.DisplayFor(model => model.Manufacturer)</p>
<p>@Html.DisplayNameFor(model => model.Model) : @Html.DisplayFor(model => model.Model)</p>
<p>@Html.DisplayNameFor(model => model.Serial) : @Html.DisplayFor(model => model.Serial)</p>
<p>
  @{ string status = ""; 
     @if (@Model.OperationalStatus == true) { status = "Operational"; }
     else {status = "Malfunctioning";} 
    }
  @{ string repairStatus = ""; 
     @if (@Model.RepairStatus == true) { repairStatus = "Under Repair"; }
     else {repairStatus = "Not Under Repair";} 
    }
    Satus: @status, @repairStatus
</p>
<p>
  @{ string date = "";
     @if (@Model.InspectionDate != null) {date = @Model.InspectionDate?.ToString("MM-dd-yyyy");}
     else {date = "N/A";}
   }
   Inspection Date: @date
</p>

@if (@Model.EngineerMachines.Count == 0)
{
  <p>There are no engineers currently authorized to work on this machine.</p>
}
else
{
  <h4>Engineers Authorized to Repair:</h4>
  <ul>
    @foreach (EngineerMachine entry in Model.EngineerMachines)
    {
      <li>
        @entry.Engineer.Name
        
        @using (Html.BeginForm("RemoveEngineer", "Machines", routeValues: new { id = entry.EngineerMachineId}))
        {
          <input type="submit" value="Remove Authorized Engineer">
        }
      </li>
    }
  </ul>
}

@Html.ActionLink("Add Authorized Engineer", "AddEngineer", new {id = @Model.MachineId})
<br>
@Html.ActionLink("Edit Machine", "Edit", new {id = @Model.MachineId})
<br>
@using (Html.BeginForm("Delete", "Machines", new { id = @Model.MachineId }))
{
  <input type="submit" value="Delete Machine" />
}